name: CI/CD to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1                      
  ECR_REPOSITORY: ao-w12-colin         
  ECS_CLUSTER: ao-w12-colin          
  ECS_SERVICE: flask-colin          
  AWS_ACCOUNT_ID: 667170361641         

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies and run tests
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m unittest discover tests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        IMAGE_TAG=${GITHUB_SHA::7}
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

    - name: Push Docker image to ECR
      run: |
        IMAGE_TAG=${GITHUB_SHA::7}
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

    - name: Update ECS service to use new image
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
